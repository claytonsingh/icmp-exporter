default:
  image: ubuntu:focal

variables:
  GIT_DEPTH: 1
  DEBIAN_FRONTEND: 'noninteractive'
  TZ: UTC

# Define Stages
stages:
  - build

build-amd64:
  tags: [docker]
  stage: build
  script:
    - apt update && apt install -y ca-certificates wget build-essential
    - wget -q https://go.dev/dl/go1.19.4.linux-amd64.tar.gz
    - tar -xf go1.19.linux-amd64.tar.gz
    - mv go /usr/local
    - export GOROOT=/usr/local/go
    - export PATH=$GOROOT/bin:$PATH
    - CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build -o bin/prom-icmp-amd64 src/*.go
  artifacts:
    paths:
      - bin/*
    expire_in: 1 week

build-arm64:
  tags: [docker]
  stage: build
  script:
    - apt update && apt install -y ca-certificates wget build-essential gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu
    - wget -q https://go.dev/dl/go1.19.4.linux-amd64.tar.gz
    - tar -xf go1.19.linux-amd64.tar.gz
    - mv go /usr/local
    - export GOROOT=/usr/local/go
    - export PATH=$GOROOT/bin:$PATH
    - CGO_ENABLED=1 GOOS=linux GOARCH=arm64 CC=aarch64-linux-gnu-gcc go build -o bin/prom-icmp-arm64 src/*.go
  artifacts:
    paths:
      - bin/*
    expire_in: 1 week

build-arm32:
  tags: [docker]
  stage: build
  script:
    - apt update && apt install -y ca-certificates wget build-essential gcc-arm-linux-gnueabi binutils-arm-linux-gnueabi
    - wget -q https://go.dev/dl/go1.19.4.linux-amd64.tar.gz
    - tar -xf go1.19.linux-amd64.tar.gz
    - mv go /usr/local
    - export GOROOT=/usr/local/go
    - export PATH=$GOROOT/bin:$PATH
    - CGO_ENABLED=1 GOOS=linux GOARCH=arm CC=arm-linux-gnueabi-gcc go build -o bin/prom-icmp-arm32 src/*.go
  artifacts:
    paths:
      - bin/*
    expire_in: 1 week
    