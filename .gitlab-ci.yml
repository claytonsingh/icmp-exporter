default:
  image: ubuntu:focal

variables:
  GIT_DEPTH: 1
  DEBIAN_FRONTEND: 'noninteractive'
  TZ: UTC

# Define Stages
stages:
  - build

build-amd64:
  tags: [docker]
  stage: build
  image: ubuntu:focal
  script:
    - apt update && apt install -y ca-certificates curl build-essential git
    - curl -sLo - https://go.dev/dl/go1.19.4.linux-amd64.tar.gz | tar zxf -
    - mv go /usr/local
    - export GOROOT=/usr/local/go
    - export PATH=$GOROOT/bin:$PATH
    - flags="-X main.versionString=$(git show -s --format=%cs) ${CI_COMMIT_TAG} $(git rev-parse HEAD)"
    - CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build -o bin/prom-icmp-amd64 -ldflags="${flags}" cmd/prom-icmp/*.go
  artifacts:
    paths:
      - bin/*
    expire_in: 1 week

build-arm64:
  tags: [docker]
  stage: build
  image: arm64v8/ubuntu:focal
  script:
    - apt update && apt install -y ca-certificates curl build-essential git
    - curl -sLo - https://go.dev/dl/go1.19.4.linux-arm64.tar.gz | tar zxf -
    - mv go /usr/local
    - export GOROOT=/usr/local/go
    - export PATH=$GOROOT/bin:$PATH
    - flags="-X main.versionString=$(git show -s --format=%cs) ${CI_COMMIT_TAG} $(git rev-parse HEAD)"
    - CGO_ENABLED=1 GOOS=linux GOARCH=arm64 go build -o bin/prom-icmp-arm64 -ldflags="${flags}" cmd/prom-icmp/*.go
  artifacts:
    paths:
      - bin/*
    expire_in: 1 week

build-arm32:
  tags: [docker]
  stage: build
  image: arm32v7/ubuntu:focal
  script:
    - apt update && apt install -y ca-certificates curl build-essential git
    - curl -sLo - https://go.dev/dl/go1.19.4.linux-armv6l.tar.gz | tar zxf -
    - mv go /usr/local
    - export GOROOT=/usr/local/go
    - export PATH=$GOROOT/bin:$PATH
    - flags="-X main.versionString=$(git show -s --format=%cs) ${CI_COMMIT_TAG} $(git rev-parse HEAD)"
    - CGO_ENABLED=1 GOOS=linux GOARCH=arm go build -o bin/prom-icmp-arm32 -ldflags="${flags}" cmd/prom-icmp/*.go
  artifacts:
    paths:
      - bin/*
    expire_in: 1 week
    