on:
  push:
    tags: 'v*'

jobs:
  release-create:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
    - name: Set Env
      run: |
        echo "RELEASE_NAME=${GITHUB_REF_NAME} / $(git show -s --format=%cs)" >> ${GITHUB_ENV}
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        draft: true
        name: "${{ env.RELEASE_NAME }}"
        generate_release_notes: true
  release-matrix:
    name: Release Go Binary
    needs: [release-create]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        include:
          - { goos: "linux", goarch: "amd64", arch: "x64",     image: "golang:bullseye" }
          - { goos: "linux", goarch: "386",   arch: "x86",     image: "i386/golang:bullseye" }
          - { goos: "linux", goarch: "arm64", arch: "arm64v8", image: "arm64v8/golang:bullseye" }
          - { goos: "linux", goarch: "arm",   arch: "arm32v7", image: "arm32v7/golang:bullseye" }
          - { goos: "linux", goarch: "arm",   arch: "arm32v5", image: "arm32v5/golang:bullseye" }
    steps:
    - uses: actions/checkout@v4
    - name: Set Env
      run: |
        echo "PACKAGE_NAME=icmp-exporter-${{ matrix.goos }}-${{ matrix.arch }}" >> ${GITHUB_ENV}
        echo "VERSION_STRING=$(git show -s --format=%cs) ${GITHUB_REF_NAME} ${GITHUB_SHA}" >> ${GITHUB_ENV}
    - uses: docker/setup-qemu-action@v3
    - name: Build Release
      run: |
        docker run --rm \
        -v $(pwd):/go/src -w /go/src \
        -e PACKAGE_NAME="${{ env.PACKAGE_NAME }}" \
        -e FLAGS="-X 'main.versionString=${{ env.VERSION_STRING }}'" \
        -e CGO_ENABLED=1 \
        -e GOOS=${{ matrix.goos }} \
        -e GOARCH=${{ matrix.goarch }} \
        -e GOFLAGS="-buildvcs=false" \
        ${{ matrix.image }} \
        .github/build.sh
    - name: Upload Release
      run: gh release upload "${GITHUB_REF_NAME}" "${{ env.PACKAGE_NAME }}.tar.gz"
      env:
        GITHUB_TOKEN: ${{ github.TOKEN }}
